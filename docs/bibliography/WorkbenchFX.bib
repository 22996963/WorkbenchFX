
@book{heckler_javafx_2014,
	title = {Javafx 8: {Introduction} by example},
	shorttitle = {Javafx 8},
	url = {https://books.google.com/books?hl=en&lr=&id=J_u3AwAAQBAJ&oi=fnd&pg=PR21&dq=%22common+use+cases+that+can+help+you+build+richer+applications.+Hopefully,+this+book+will+lead%22+%222005+Sun+Microsystems+acquired+the+company+SeeBeyond,+where+a+software+engineer%22+&ots=Yb2ueZJhAv&sig=0tojsspTs24WAffAc1iM9xu6b24},
	urldate = {2017-09-29},
	publisher = {Apress},
	author = {Heckler, Mark and Grunwald, Gerrit and Pereda, José and Phillips, Sean and Dea, Carl},
	year = {2014},
	file = {Java FX 8 Examples.pdf:/Users/Blizzard/Zotero/storage/NVQVQLGK/Java FX 8 Examples.pdf:application/pdf}
}

@book{sharan_learn_2015,
	title = {Learn {JavaFX} 8: {Building} {User} {Experience} and {Interfaces} with {Java} 8},
	shorttitle = {Learn {JavaFX} 8},
	url = {https://books.google.com/books?hl=en&lr=&id=Wb8ICAAAQBAJ&oi=fnd&pg=PP3&dq=%22when+it+dropped+the+support+for+JavaFX+Script+and+supported+writing+JavaFX+programs+using%22+%22topics+in+such+a+way+that+chapters+can+be+read+serially.+The+book+contains+numerous+pictures+to+aid%22+&ots=_9bFVJe35Y&sig=VZRpxxCPpLzJRY9q8jmGNhL85WY},
	urldate = {2017-09-29},
	publisher = {Apress},
	author = {Sharan, Kishori},
	year = {2015},
	file = {Learn Java FX 8.pdf:/Users/Blizzard/Zotero/storage/9PF3DNVJ/Learn Java FX 8.pdf:application/pdf}
}

@book{weaver_pro_2014,
	title = {Pro {JavaFX} 8: {A} {Definitive} {Guide} to {Building} {Desktop}, {Mobile}, and {Embedded} {Java} {Clients}},
	shorttitle = {Pro {JavaFX} 8},
	url = {https://books.google.com/books?hl=en&lr=&id=RloWBAAAQBAJ&oi=fnd&pg=PA1&dq=%22of+IoT.+Also,+because+of+community+projects+led+by+folks+such+as+Johan+Vos+and+Niklas+Therning,%22+%22ask+what+the+world+needs.+Ask+what+makes+you+come+alive,+and+go+do+it.+Because+what%22+&ots=QCpSSSeNkY&sig=GlMCyOstuMOSl91FXErhXXuU7pA},
	urldate = {2017-09-29},
	publisher = {Apress},
	author = {Weaver, James and Gao, Weiqi and Chin, Stephen and Iverson, Dean and Vos, Johan},
	year = {2014},
	file = {Pro JavaFX 8.pdf:/Users/Blizzard/Zotero/storage/5CZ56WUK/Pro JavaFX 8.pdf:application/pdf}
}

@book{bloch_effective_2018,
	address = {Boston},
	edition = {Third edition},
	title = {Effective {Java}},
	isbn = {978-0-13-468599-1},
	abstract = {"Each chapter of Effective Java, Third Edition, consists of several "items," each presented in the form of a short, stand-alone essay that provides specific advice, insight into Java platform subtleties, and updated code examples. The comprehensive descriptions and explanations for each item illuminate what to do, what not to do, and why. The third edition covers language and library features added in Java 7, 8, and 9, including the functional programming constructs that were added to its object-oriented roots. Many new items have been added, including a chapter devoted to lambdas and streams" --Publisher},
	publisher = {Addison-Wesley},
	author = {Bloch, Joshua},
	year = {2018},
	note = {OCLC: on1018432176},
	keywords = {COMPUTERS / Programming / Object Oriented, Java (Computer program language), Nonfiction},
	file = {Effective Java.pdf:/Users/Blizzard/Zotero/storage/4MDJDC3Q/Effective Java.pdf:application/pdf}
}

@misc{noauthor_system_nodate,
	title = {System icons},
	url = {https://material.io/design/iconography/system-icons.html},
	language = {en},
	urldate = {2018-08-07},
	journal = {Material Design},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/H3LP8648/system-icons.html:text/html}
}

@book{osherove_art_2013,
	address = {Shelter Island, NY},
	edition = {Second edition},
	title = {The {Art} of {Unit} {Testing}: with examples in {C}\#},
	isbn = {978-1-61729-089-3},
	shorttitle = {The {Art} of {Unit} {Testing}},
	abstract = {The Art of Unit Testing, Second Edition guides you step by step from writing your first simple tests to developing robust test sets that are maintainable, readable, and trustworthy. You'll master the foundational ideas and quickly move to high-value subjects like mocks, stubs, and isolation, including frameworks such as Moq, FakeItEasy, and Typemock Isolator. You'll explore test patterns and organization, working with legacy code, and even "untestable" code. Along the way, you'll learn about integration testing and techniques and tools for testing databases and other technologies.About this BookYou know you should be unit testing, so why aren't you doing it? If you're new to unit testing, if you find unit testing tedious, or if you're just not getting enough payoff for the effort you put into it, keep reading.The Art of Unit Testing, Second Edition guides you step by step from writing your first simple unit tests to building complete test sets that are maintainable, readable, and trustworthy. You'll move quickly to more complicated subjects like mocks and stubs, while learning to use isolation (mocking) frameworks like Moq, FakeItEasy, and Typemock Isolator. You'll explore test patterns and organization, refactor code applications, and learn how to test "untestable" code. Along the way, you'll learn about integration testing and techniques for testing with databases.The examples in the book use C\#, but will benefit anyone using a statically typed language such as Java or C++.Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.What's InsideCreate readable, maintainable, trustworthy testsFakes, stubs, mock objects, and isolation (mocking) frameworksSimple dependency injection techniquesRefactoring legacy codeAbout the AuthorRoy Osherove has been coding for over 15 years, and he consults and trains teams worldwide on the gentle art of unit testing and test-driven development. His blog is at ArtOfUnitTesting.com.Table of ContentsPART 1 GETTING STARTEDThe basics of unit testingA first unit testPART 2 CORE TECHNIQUESUsing stubs to break dependenciesInteraction testing using mock objectsIsolation (mocking) frameworksDigging deeper into isolation frameworksPART 3 THE TEST CODETest hierarchies and organizationThe pillars of good unit testsPART 4 DESIGN AND PROCESSIntegrating unit testing into the organizationWorking with legacy code Design and testability},
	language = {English},
	publisher = {Manning Publications},
	author = {Osherove, Roy},
	month = dec,
	year = {2013}
}

@misc{noauthor_travis_nodate,
	title = {Travis using {PR} and push to run checks twice · {Issue} \#475 · {JuliaGraphs}/{LightGraphs}.jl},
	url = {https://github.com/JuliaGraphs/LightGraphs.jl/issues/475},
	abstract = {What is the difference between these checks, can we just use the PR one because nothing should be committed without going through a PR? seems like it should reduce our travis load.},
	language = {en},
	urldate = {2018-08-11},
	journal = {GitHub},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/6HS7AQ39/475.html:text/html}
}

@misc{noauthor_checkstyle:_2018,
	title = {checkstyle: {Checkstyle} is a development tool to help programmers write {Java} code that adheres to a coding standard. {By} default it supports the {Google} {Java} {Style} {Guide} and {Sun} {Code} {Conventions}, but..},
	shorttitle = {checkstyle},
	url = {https://github.com/checkstyle/checkstyle},
	urldate = {2018-08-11},
	publisher = {Checkstyle},
	month = aug,
	year = {2018},
	note = {original-date: 2013-08-31T02:05:05Z}
}

@misc{idan_top_2017,
	title = {The {Top} 100 {Java} {Libraries} in 2017 - {Based} on 259,885 {Source} {Files}},
	url = {http://blog.takipi.com/the-top-100-java-libraries-in-2017-based-on-259885-source-files/},
	abstract = {What are the most popular libraries Java developers use? 2017 edition},
	language = {en-US},
	urldate = {2018-08-11},
	journal = {OverOps Blog},
	author = {Idan, Henn},
	month = jul,
	year = {2017},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/B8H6L67E/the-top-100-java-libraries-in-2017-based-on-259885-source-files.html:text/html}
}

@misc{noauthor_successful_nodate,
	title = {A successful {Git} branching model},
	url = {http://nvie.com/posts/a-successful-git-branching-model/},
	abstract = {In this post I present a Git branching strategy for developing and releasing software as I’ve used it in many of my projects, and which has turned out to be very successful.},
	language = {en},
	urldate = {2018-08-11},
	journal = {nvie.com},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/VFJ3YVHG/a-successful-git-branching-model.html:text/html}
}

@misc{noauthor_elevation_nodate,
	title = {Elevation},
	url = {https://material.io/design/environment/elevation.html#depicting-elevation},
	language = {en},
	urldate = {2018-08-11},
	journal = {Material Design},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/BKR5LLYF/elevation.html:text/html}
}

@misc{noauthor_fontawesomefx_nodate,
	title = {{FontAwesomeFX}},
	url = {https://bintray.com/jerady/maven/FontAwesomeFX},
	abstract = {Download FontAwesomeFX from Bintray. Modern Software Distribution Service for Docker, Maven, Debian, RPM, npm, NuGet and more.},
	language = {en},
	urldate = {2018-08-11},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/UTRK8MCA/FontAwesomeFX.html:text/html}
}

@misc{noauthor_font_nodate,
	title = {Font {Awesome} 5},
	url = {https://origin.fontawesome.com/},
	abstract = {The world’s most popular and easiest to use icon set just got an upgrade. More icons. More styles. More Options.},
	language = {en},
	urldate = {2018-08-11},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/YBAHITFE/fontawesome.com.html:text/html}
}

@misc{lemmermann_javafx_2017,
	title = {{JavaFX} {Tip} 27: {HiRes} / {Retina} {Icons}},
	shorttitle = {{JavaFX} {Tip} 27},
	url = {https://dlsc.com/2017/08/29/javafx-tip-27-hires-retina-icons/},
	abstract = {I recently had a lot of icons sent to me by a graphics / UX designer. It was my job to add them to a JavaFX application. Each icon was shipped in three sizes (16x16, 32x32, 64x64). The naming convention for them was like this:
icon-name.png
icon-name@2x.png
icon-name@3x.png
At first I thought that this was some},
	language = {en-US},
	urldate = {2018-08-11},
	journal = {DLSC},
	author = {Lemmermann, Dirk},
	month = aug,
	year = {2017},
	file = {Snapshot:/Users/Blizzard/Zotero/storage/S9G44TT2/javafx-tip-27-hires-retina-icons.html:text/html}
}

@misc{noauthor_node_nodate,
	title = {Node ({JavaFX} 8)},
	url = {https://docs.oracle.com/javase/8/javafx/api/javafx/scene/Node.html},
	urldate = {2018-08-11},
	journal = {Javadoc},
	file = {Node (JavaFX 8):/Users/Blizzard/Zotero/storage/7MXJHNCZ/Node.html:text/html}
}